apply plugin: 'com.android.application'
def cfg = rootProject.ext.configuration// 配置
def libs = rootProject.ext.libraries//库

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation "com.android.support:design:${libs.supportVersion}"
    /**
     * Rx
     */
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
    /**
     * 侧滑回退
     */
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'
    /**
     * butterknife
     */
    implementation "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
    /**
     * Rxjava生命周期管理
     */
    implementation "com.trello.rxlifecycle2:rxlifecycle:${libs.rxlifecycle}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:${libs.rxlifecycle}"
    implementation "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-scalars:${libs.retrofit}"
    compile "com.squareup.okhttp3:okhttp:${libs.okhttp3}"
    compile "com.squareup.okhttp3:logging-interceptor:${libs.okhttp3}"
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
//    compile("com.squareup.retrofit2:converter-simplexml:${libs.retrofit}") {
//        exclude module: 'stax'
//        exclude module: 'stax-api'
//        exclude module: 'xpp3'
//    }
}


android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


